{"version":3,"sources":["MailGraph.js","WordCloud.js","Connectivity.js","OverAllStats.js","EdgeStats.js","Button.js","ContentLists.js","Upload.js","App.js","serviceWorker.js","index.js"],"names":["count","img","categories","n","selected","MailGraph","onChartClick","e","dataType","d","_this","echarts_react","getEchartsInstance","s","data","source","t","target","props","selectEdge","id","Object","keys","forEach","key","dispatchAction","type","name","nodes","edges","this","nodeImg","animationDurationUpdate","animationEasingUpdate","legend","map","a","show","series","layout","node","length","label","x","y","symbol","symbolSize","size","category","itemStyle","normal","color","position","rotate","formatter","edge","From","To","emphasis","roam","focusNodeAdjacency","lineStyle","width","curveness","opacity","_this2","react_default","createElement","lib_default","ref","style","height","option","getOption","onEvents","click","Component","WordCloud","title","text","subtext","textStyle","fontSize","fontFamily","fontWeight","padding","top","backgroundColor","tooltip","gridSize","sizeRange","rotationRange","shape","drawOutOfBound","Math","round","random","join","shadowBlur","shadowColor","slice","filter","index","value","margin","num","Connectivity","edgeSymbol","by","fromm","OverAllStats","obj","class","convertObjectToArray","className","build_default","component","duration","stepPrecision","EdgeStats","result","Button","onClick","changeState","ContentLists","headers","header","selectEmail","override","css","_templateObject","Upload","state","file","loading","error","files","setState","split","config","onUploadProgress","progressEvent","percentCompleted","loaded","total","console","log","formData","FormData","append","axios","post","then","res","submit","_this3","onChange","handleFile","align","handleUpload","SyncLoader_default","sizeUnit","OVER_ALL","EDGE","BAR_TITLE","App","mock","sideBarState","msgList","showContent","targetEmailIndex","stat","Emails","count_all_mail","Users","count_all_node","Connections","count_all_edge","Words","all_wc_count","uploaded","openUpload","message_list","message_count","edge_wc_count_list","changeSideBarState","onCloseContent","submitFile","onCloseUpload","index_es","open","onClose","center","src_Connectivity","relayGraph","list_con_etc","dangerouslySetInnerHTML","__html","list_content","src_Button","src_MailGraph","codeImg","src_OverAllStats","src_WordCloud","all_wc_60","src_EdgeStats","edge_wc_60","src_ContentLists","src_Upload","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.b9a0df7c.chunk.js","sourcesContent":["import React, { Component } from \"react\"\nimport ReactEcharts from \"echarts-for-react\"\n\nconst img = ['https://png.pngtree.com/svg/20170602/avatar_107646.png',\n            'https://cdn.iconscout.com/icon/free/png-256/avatar-369-456321.png',\n            'https://cdn.iconscout.com/icon/free/png-256/avatar-372-456324.png',\n            'https://cdn.iconscout.com/icon/free/png-256/avatar-375-456327.png',\n            'https://cdn.iconscout.com/icon/free/png-256/avatar-367-456319.png',\n            'https://png.pngtree.com/svg/20161217/avatar__181424.png',\n            'https://www.presidia.it/wp-content/uploads/2015/09/flat-faces-icons-circle-3.png',\n            'https://image.flaticon.com/icons/png/512/206/206853.png',\n            'https://cdn.iconscout.com/icon/free/png-256/avatar-373-456325.png',\n            'https://image.flaticon.com/icons/png/512/194/194838.png',\n            'https://image.flaticon.com/icons/png/512/146/146022.png',\n            'https://upload.wikimedia.org/wikipedia/commons/thumb/8/8b/Creative-Tail-People-man-2.svg/1024px-Creative-Tail-People-man-2.svg.png',\n            'http://www.iyrix.com/wp-content/uploads/2018/02/20161014_58006bf8f1610.png']\nvar count\nvar categories = [];\nvar n = -1;\nvar selected = {};\n\n\nclass MailGraph extends Component {\n\n    getOption(nodes, edges) {\n\n        count = this.props.nodeImg\n        return {\n            animationDurationUpdate: 800,\n            animationEasingUpdate: 'quadraticOut',\n            legend: [{\n                type: 'scroll',\n                data: categories.map(function (a) {\n                    return {\n                        name: a.name,   \n                    }\n                }),\n                selected: selected,\n                show: false\n            }],\n            series : [\n                {\n                    type: 'graph',\n                    layout: 'none',\n                    categories: categories,\n                    data: nodes.map(function (node) {\n                        if (count<img.length-1)\n                            count = count+1\n                        else   \n                            count = 0\n                        n = n+1;\n                        categories[n] = {\n                            name: node.label\n                        }\n                        selected[node.label] = true\n                        return {\n                            x: node.x,\n                            y: node.y,\n                            id: node.id,\n                            name: node.label,\n                            symbol: 'image://'+img[count],\n                            symbolSize: node.size*3,\n                            category: n,\n                            itemStyle: {\n                                normal: {\n                                    color: node.color,\n                                },\n                            },\n                            label: {\n                                position: 'bottom',\n                                rotate: 90,\n                                formatter: '{b}',\n                                color: 'white'\n                            },\n                        };\n                    }),\n                    edges: edges.map(function (edge) {\n                        return {\n                            source: edge.From,\n                            target: edge.To,\n                            id: edge.id,\n                        };\n                    }),\n                    label: {\n                        normal: {\n                            position: ['50%','100%'],\n                            show: true,\n                        },\n                        emphasis: {\n                            show: true,\n                        },\n                    },\n                    roam: true,\n                    focusNodeAdjacency: true,\n                    lineStyle: {\n                        normal: {\n                            width: 1,\n                            curveness: 0.3,\n                            opacity: 1\n                        },\n                    }      \n                    \n                }\n            ]\n        }\n    }   \n    \n    onChartClick = (e) => {    \n        if (e.dataType === \"edge\") {\n            var d = this.echarts_react.getEchartsInstance()\n            var s = e.data.source\n            var t = e.data.target\n            this.props.selectEdge(e.data.id)\n            // this.echarts_react.getEchartsInstance().dispatchAction(\n                // {\n                //     type: 'focusNodeAdjacency',\n                //     seriesIndex: 0,\n                //     edgeDataIndex: e.data.id\n                // },\n            // )\n            Object.keys(selected).forEach(function (key) {\n                if (s === key || t === key) {\n                    d.dispatchAction(\n                        {\n                            type: 'legendSelect',\n                            name: key\n                        },\n                    )\n                }\n                else {\n                    d.dispatchAction(\n                        {\n                            type: 'legendUnSelect',\n                            name: key\n                        },\n                    )\n                }\n                \n            })\n        }\n    }\n\n    render() {\n        return (\n            <ReactEcharts \n                ref={(e) => { this.echarts_react = e; }}\n                style={{ height: \"90%\" }}\n                option={this.getOption(this.props.nodes, this.props.edges)}\n                onEvents={{'click': this.onChartClick}}\n            />\n        )\n    }\n}\n\nexport default MailGraph","import React, { Component } from \"react\"\nimport ReactEcharts from \"echarts-for-react\";\nimport 'echarts-wordcloud'\n\n\nclass WordCloud extends Component {\n\n    getOption(data) {\n\n        return {\n            title: {\n                text: 'Wordcloud',\n                subtext: \"Top 60 most frequently words\",\n                textStyle: {\n                    fontSize: 18,\n                    fontFamily: '-apple-system, BlinkMacSystemFont, \"Segoe UI\", \"Roboto\", \"Oxygen\", \"Ubuntu\", \"Cantarell\", \"Fira Sans\", \"Droid Sans\", \"Helvetica Neue\", sans-serif',\n                    fontWeight: 'normal'\n                },\n                padding: 15,\n                top: 5,\n            },\n            backgroundColor: \"white\",\n            tooltip: {},\n            series: [ {\n                type: 'wordCloud',\n                gridSize: 2,\n                sizeRange: [12, 30],\n                rotationRange: [0,0],\n                shape: 'pentagon',\n                // width: 400,\n                // height: 400,\n                drawOutOfBound: true,\n                textStyle: {\n                    normal: {\n                        color: function () {\n                            return 'rgb(' + [\n                                Math.round(Math.random() * 160),\n                                Math.round(Math.random() * 160),\n                                Math.round(Math.random() * 160)\n                            ].join(',') + ')';\n                        }\n                    },\n                    emphasis: {\n                        shadowBlur: 10,\n                        shadowColor: '#333'\n                    }\n                },\n                data: Object.keys(data).slice(0, 60)\n                .filter(key => {\n                    return key.length < 15 \n                })\n                .map(function (key, index) {\n                    //console.log(key, data[name][key])\n                    return {\n                        name: key,\n                        value: data[key]  \n                    };\n                }),\n            } ]\n        }\n    }\n\n    render() {\n        return (\n            <ReactEcharts \n                style={{ height: \"300px\", margin: \"25px\"}}\n                option={this.getOption(this.props.data)}\n            />\n        )\n    }\n}\n\nexport default WordCloud","import React, { Component } from \"react\"\nimport ReactEcharts from \"echarts-for-react\";\n\nvar num = 0\n\nclass Connectivity extends Component {\n\n    getOption(data) {\n        return {\n            title: {\n                text: \"Connectivity\",\n                subtext: \"Server Connectivity\",\n                textStyle: {\n                    fontSize: 18,\n                    fontFamily: '-apple-system, BlinkMacSystemFont, \"Segoe UI\", \"Roboto\", \"Oxygen\", \"Ubuntu\", \"Cantarell\", \"Fira Sans\", \"Droid Sans\", \"Helvetica Neue\", sans-serif',\n                    fontWeight: 'normal'\n                },\n                padding: 15,\n                top: 5,\n            },\n            backgroundColor: \"white\",\n            animationDurationUpdate: 1500,\n            animationEasingUpdate: 'quinticInOut',\n            series : [\n                {\n                    type: 'graph',\n                    edgeSymbol: ['', 'arrow'],\n    \n                    data: data.nodes.map(function (node) {\n                        num = num+10\n                        return {\n                            x: node.x,\n                            y: node.y+num,\n                            id: node.id,\n                            name: node.label,\n                            symbolSize: node.size,\n                            itemStyle: {\n                                normal: {\n                                    color: node.color\n                                }\n                            },\n                            label: {\n                            },\n                        };\n                    }),\n                    edges: data.edges.map(function (edge) {\n                        return {\n                            source: edge.by,\n                            target: edge.fromm,\n                            label: {\n                    },\n                         lineStyle: {\n                              normal: {\n                                  width: 1,\n                                  curveness: 0.3,\n                                  opacity: 1\n                              }\n                            }      \n                        };\n                    }),\n                    label: {\n                        normal: {\n                            position: 'bottom',\n                            formatter: '{b}',\n                            show: true\n                        },\n                        emphasis: {\n                            position: 'bottom',\n                            show: true\n                        }\n                    },\n                    roam: true,\n                    focusNodeAdjacency: true,\n                    \n                }\n            ]\n        }\n    }\n\n    render() {\n        return (\n            <ReactEcharts\n                //style={{ height: \"300px\" , margin: \"25px\"}}\n                option={this.getOption(this.props.data)}\n            />)\n    }\n}\n\nexport default Connectivity","import React, { Component } from 'react';\nimport AnimatedNumber from 'react-animated-number';\n\nclass OverAllStats extends Component {\n\n    convertObjectToArray(obj) {\n        const color = [\"#20a8d8\", \"#63c2de\", \"#ffc107\", \"#f86c6b\"]\n        const result = Object.keys(obj).map((key, index) => {\n            return {\n                id: index,\n                name: key,\n                value: obj[key],\n                color: color[index],\n                class: key === \"Emails\" ? \"box-large\" : \"box-small\"\n            }\n        })\n        return result\n    }\n\n    render() {\n        const data = this.convertObjectToArray(this.props.data)\n        return (\n            <div className=\"box-wrapper\">\n                {\n                    data.map(obj => {\n                        return (\n                            <div className={obj.class} style={{ backgroundColor: obj.color }}>\n                                <p />\n                                <AnimatedNumber \n                                    className=\"number\" \n                                    component=\"text\" \n                                    value={obj.value}\n                                    duration={300}\n                                    stepPrecision={0}\n                                />\n                                <p className=\"name\">{obj.name}</p>\n                            </div>\n                        )\n                    })\n                }\n            </div>\n        )\n    }\n}\n\nexport default OverAllStats","import React, { Component } from 'react';\nimport AnimatedNumber from 'react-animated-number';\n\n\nlet color = [\"#20c997\", \"#63c2de\", \"#20a8d8\"]\n\n\nclass EdgeStats extends Component {\n\n    convertObjectToArray(obj) {\n        const result = Object.keys(obj).map((key, index) => {\n            return {\n                id: index,\n                name: key,\n                value: obj[key],\n                color: color[index],\n                // class: key === \"Emails\" ? \"box-large\" : \"box-medium\"\n                class: \"box-medium\"\n            }\n        })\n        color = [color[1], color[2], color[0]]\n        return result\n    }\n\n    render() {\n        const data = this.convertObjectToArray(this.props.data)\n        return (\n            <div className=\"box-wrapper\">\n                {\n                    data.map(obj => {\n                        return (\n                            <div className={obj.class} style={{ backgroundColor: obj.color }}>\n                                <p />\n                                <AnimatedNumber \n                                    className=\"number\" \n                                    component=\"text\" \n                                    value={obj.value}\n                                    duration={300}\n                                    stepPrecision={0}\n                                />\n                                <p className=\"name\">{obj.name}</p>\n                            </div>\n                        )\n                    })\n                }\n            </div>\n        )\n    }\n}\n\nexport default EdgeStats","import React, { Component } from \"react\"\n\nclass Button extends Component {\n    render() {\n        return (<button className=\"home-button\" onClick={this.props.changeState}><ion-icon name=\"home\"></ion-icon></button>)\n    }\n}\n\nexport default Button","import React, { Component } from \"react\"\n\nclass ContentLists extends Component {\n    render() {\n        // console.log(this.props.headers)\n        return (\n            <div>\n                {\n                    this.props.headers.map((header, index) => {   \n                        return (\n                            <div className=\"list\" onClick={() => this.props.selectEmail(index)}>\n                                <p className=\"list-title\"><span className=\"hilight-grey\">Subject:</span> {header[2]}</p>\n                                <p className=\"list-subtitle\"><span className=\"hilight-grey\">From:</span> {header[0]}</p>\n                                <p className=\"list-subtitle\"><span className=\"hilight-grey\">To:</span> {header[1]}</p>\n                                <p className=\"list-subtitle\"><span className=\"hilight-grey\">Date:</span> {header[3]}</p>\n                            </div>\n                        )\n                    })\n                }\n            </div>\n        )\n    }\n}\n\nexport default ContentLists","import React, { Component } from 'react'\nimport axios from 'axios'\nimport { css } from 'react-emotion';\nimport Loader from 'react-spinners/SyncLoader';\n\nimport './App.css'\n\nconst override = css`\n    display: block;\n    margin: 0 auto;\n    border-color: red;\n`;\n\nclass Upload extends Component {\n\n    state = {\n        file: null,\n        loading: false,\n        error: ''\n    }\n\n    handleFile(e) {\n        let file = e.target.files[0]\n        this.setState({\n            file: file\n        })\n    }\n\n    handleUpload(e) {\n        if (this.state.file == null) {\n            this.setState({\n                error: 'No file to upload'\n            })\n        }\n        else {\n            var type = this.state.file.name.split('.').slice(1).join('.')\n            if (type !== 'mbox') {\n                if (type !== null){\n                    this.setState({\n                        error: 'File .'+type+' are not allowed.'\n                    })\n                }\n                else {\n                    this.setState({\n                        error: 'No file to upload'\n                    })\n                }\n            }\n            else {\n                this.setState({\n                    loading: true\n                })\n                const config = {\n                    onUploadProgress: function(progressEvent) {\n                        var percentCompleted = Math.round( (progressEvent.loaded * 100) / progressEvent.total );\n                        console.log(percentCompleted)\n                    }\n                }\n                const formData = new FormData();\n                formData.append(\"file\", this.state.file);\n\n                axios.post('http://158.108.33.19:5000/upload', formData, config)\n                    .then((res)=>{\n                        this.props.submit(res.data)\n                    })   \n            }   \n        }\n    }\n\n    render() {\n        return (\n            <div className=\"App\">\n                <form>\n                    <h1>Upload file for investigation</h1>\n                    <br />\n                    <input type=\"file\" name=\"file\" onChange={(e) => this.handleFile(e)}></input>\n                    <br /><br />\n                    <p className=\"upload\">**Only .mbox file are allowed</p>\n                    <br />\n                    <div align=\"center\">\n                        <button type=\"button\" onClick={(e) => this.handleUpload(e)}>Upload</button>\n                        <br /><br />\n                        <p className=\"error\">{this.state.error}</p>\n                        <Loader\n                            className={override}\n                            sizeUnit={\"px\"}\n                            size={10}\n                            color={'#20c997'}\n                            loading={this.state.loading}\n                        />\n                    </div>\n                </form>\n            </div>\n        )\n    }\n}\n\nexport default Upload","import React, { Component } from 'react';\nimport Modal from 'react-responsive-modal';\nimport MailGraph from './MailGraph';\nimport WordCloud from './WordCloud';\nimport Connectivity from './Connectivity';\nimport OverAllStats from './OverAllStats';\nimport EdgeStats from './EdgeStats';\nimport Button from './Button'\nimport ContentLists from './ContentLists';\nimport Upload from './Upload'\n\nimport \"./App.css\"\nimport mock from \"./data/mock.json\"\n\nconst OVER_ALL = 0;\n// const NODE = 1;\nconst EDGE = 2;\n\nconst BAR_TITLE = [\"Overall Analytics\", \"User Analytics\", \"Connection Analytics\"]\n\nclass App extends Component {\n  state = {\n    data: mock,\n    sideBarState: OVER_ALL,\n    id: 38,\n    msgList: {},\n    showContent: false,\n    targetEmailIndex: 0,\n    nodeImg: -1,\n    stat: {\n      \"Emails\": mock.count_all_mail,\n      \"Users\": mock.count_all_node,\n      \"Connections\": mock.count_all_edge,\n      \"Words\": mock.all_wc_count\n    },\n    uploaded: false,\n    openUpload: true,\n  }\n\n  selectEdge = (id) => {\n    this.setState({\n      id: id,\n      sideBarState: EDGE,\n      msgList: this.state.data.edges[id].message_list,\n      nodeImg: -1,\n      stat: {\n        Emails: this.state.data.edges[id].message_count, \n        Words: this.state.data.edge_wc_count_list[id]\n      },\n    })\n  }\n\n  changeSideBarState = () => {\n    this.setState({\n      sideBarState: OVER_ALL,\n      stat: {\n        \"Emails\": this.state.data.count_all_mail,\n        \"Users\": this.state.data.count_all_node,\n        \"Connections\": this.state.data.count_all_edge,\n        \"Words\": this.state.data.all_wc_count\n      },\n    })\n  }\n\n  selectEmail = (index) => {\n    this.setState({\n      showContent: true,\n      targetEmailIndex: this.state.msgList[index],\n    })\n  }\n\n  onCloseContent = () => {\n    this.setState({\n      showContent: false,\n    })\n  }\n\n  submitFile = (file) => {\n    this.setState({\n      uploaded: true,\n      data: file,\n      stat: {\n        \"Emails\": file.count_all_mail,\n        \"Users\": file.count_all_node,\n        \"Connections\": file.count_all_edge,\n        \"Words\": file.all_wc_count\n      },\n    })\n  }\n\n  onCloseUpload = () => {\n    this.setState({ \n      openUpload: false,\n      uploaded: true\n    });\n  };\n\n  render() {\n    if (this.state.uploaded) {\n      return (\n        <div className=\"App\">\n          <Modal open={this.state.showContent} onClose={this.onCloseContent} center>\n            <div>\n              <div>\n                <Connectivity data={this.state.data.relayGraph[this.state.targetEmailIndex]}/>\n              </div>\n              <div className=\"header\">\n                <p><span className=\"header-big\"> {this.state.data.list_con_etc[this.state.targetEmailIndex][2]}</span></p>\n                <p>From:<span className=\"hilight-blue\"> {this.state.data.list_con_etc[this.state.targetEmailIndex][0]}</span></p>\n                <p>To:<span className=\"hilight-blue\"> {this.state.data.list_con_etc[this.state.targetEmailIndex][1]}</span></p>\n                <p>Date:<span className=\"hilight-blue\"> {this.state.data.list_con_etc[this.state.targetEmailIndex][3]}</span></p>\n                <br></br><br></br>\n              </div>\n              <div className=\"content\" dangerouslySetInnerHTML={{ __html: this.state.data.list_content[this.state.targetEmailIndex] }} />           \n            </div>\n          </Modal>\n          <div className=\"mail-graph\">\n            <div className=\"mail-graph-bar\">\n              <p>E-mail Crime Investigation System</p>\n            </div>\n            <Button changeState={this.changeSideBarState}/>\n            <MailGraph \n              nodes={this.state.data.nodes}\n              edges={this.state.data.edges}\n              selectEdge={this.selectEdge} \n              codeImg={this.state.nodeImg}\n            />\n          </div>\n          <div className=\"side-graph\">\n            <div className=\"side-graph-bar\">\n              <p>{BAR_TITLE[this.state.sideBarState]}</p>\n              {\n                this.state.sideBarState === EDGE && (\n                  <p className=\"side-graph-bar-subtitle\">{this.state.data.edges[this.state.id].From} & {this.state.data.edges[this.state.id].To}</p>\n                )\n              }\n            </div>\n            <div className=\"side-graph-container\">\n              {\n                this.state.sideBarState === OVER_ALL &&\n                (\n                  <div>\n                    <OverAllStats data={this.state.stat}/>\n                    <WordCloud data={this.state.data.all_wc_60[0]}/>              \n                  </div>\n                )\n              }\n              {\n                this.state.sideBarState === EDGE && \n                (\n                  <div>\n                    <EdgeStats data={this.state.stat}\n                    />\n                    <WordCloud data={this.state.data.edge_wc_60[this.state.id]} />\n                    <ContentLists\n                      headers={\n                        this.state.msgList.map(index => {\n                          return this.state.data.list_con_etc[index]\n                        })\n                      }\n                      selectEmail={this.selectEmail}\n                    />\n                  </div>\n                )\n              }\n            </div>\n          </div>\n        </div>\n      )\n    }\n    else {\n      return (\n        <div className=\"App\">\n          <Modal open={this.state.openUpload} onClose={this.onCloseUpload} center>\n            <div>\n              <Upload submit={this.submitFile}/>\n            </div>\n          </Modal>\n        </div>\n      );\n    }\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}